syntax = "proto3";
option go_package = "./";
package api;
//protoc --go_out=plugins=grpc:./ ./pay_ment_api.proto
service PayApi {
  rpc Transfer (TransferReq) returns (TransferResp) {}
  rpc FindOrder (FindOrderReq) returns (FindOrderResp) {}
  rpc Withdraw (WithdrawReq) returns (WithdrawResp) {}
  rpc Generate (GenAddrReq) returns (GenAddrResp) {}
  rpc CallContract (CallContractReq) returns (CallContractResp) {}
}
message Order {
  string OrderNum = 1;
  string OrderTyp = 2;
  bytes OrderInfo = 3;
}
// TX type of OrderInfo
message TxOrder {
  string FromTyp = 1;
  string ToTyp = 2;
  string From = 3;
  string To = 4;
  int64 Amount = 5;
}
//// CON type of OrderInfo
message ContractOrder {
  string FromTyp = 1;
  string ToTyp = 2;
  string From = 3;
  string To = 4;
  bytes Payload = 5;
}
// general response
message GeneralResp {
  bool Success = 1;
  bytes   Data = 2;
}
// generate ADDR
message GenAddrReq {
  string Typ = 1;
}
// withdraw request
message WithdrawReq {
  string Typ = 1;
  int64 Amount = 2;
  string TargetAddress = 3;
  string CallbackURL = 4;
}

// transfer request
message TransferReq {
  string TargetTyp = 1;
  string TargetData = 2;
  int64 Amount = 3;
  string Typ = 4;
  string CallbackURL = 5;
}
// find order request
message FindOrderReq {
  string OrderNum = 1;
}
// call contract request
message CallContractReq {
  bytes Payload = 1;
  string Typ = 2;
}
// response for generate address
message GenAddrResp {
  string Address = 1;
  string Typ = 2;
}
// response for withdraw
message WithdrawResp {
  string OrderNum = 1;
}
// response for transfer
message TransferResp {
  string OrderNum = 1;
}
// response for find order
message FindOrderResp {
  Order Order = 1;
}
// response for call contract
message CallContractResp {
  bytes Payload = 1;
}